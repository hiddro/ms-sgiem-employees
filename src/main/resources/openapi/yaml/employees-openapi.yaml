openapi: "3.0.0"
info:
  version: 1.0.0
  title: Swagger Employees Proyecto SGIEM - UTP
  license:
    name: MIT
servers:
  - url: http://localhost:8080/
tags:
  - name: employee
    description: Everything about your Employees
paths:
  /employees:
    get:
      summary: List all employees
      description: Return list Employees
      operationId: listEmployees
      tags:
        - employee
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeResponse'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a employee
      description: Add a new Employee
      operationId: registerEmployee
      tags:
        - employee
      requestBody:
        description: Create a new employee
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/EmployeeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmployeeRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmployeeResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /employees/{email}:
    get:
      summary: Search employee for email
      description: Return employee
      operationId: getEmployeeEmail
      tags:
        - employee
      parameters:
        - name: email
          in: path
          description: email employee
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmployeeResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      tags:
        - employee
      summary: Update data employee
      description: This can only be done by the logged in user.
      operationId: updateEmployee
      parameters:
        - name: email
          in: path
          description: email employee
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existent password the user.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeRequestUpdate'
          application/xml:
            schema:
              $ref: '#/components/schemas/EmployeeRequestUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmployeeRequestUpdate'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmployeeResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /employees/assign/{titulo}/{code}:
    put:
      tags:
        - employee
      summary: Assign employee added rol
      description: This can only be done by the logged in user.
      operationId: assignEmployee
      parameters:
        - name: titulo
          in: path
          description: titulo that need to be added
          required: true
          schema:
            type: string
        - name: code
          in: path
          description: code user - employee
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmployeeResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    EmployeeResponse:
      type: object
      properties:
        id:
          type: string
          example: 1
        names:
          type: string
          example: James
        email:
          type: string
          example: james@gmail.com
        dateOfbirth:
          type: string
          pattern: "^\\d{2}-\\d{2}-\\d{4}$"
          example: "10-03-1993"
        createAccount:
          type: string
          pattern: "^\\d{2}-\\d{2}-\\d{4}$"
          example: "10-03-1993"
        modifiedAccount:
          type: string
          pattern: "^\\d{2}-\\d{2}-\\d{4}$"
          example: "10-03-1993"
        surenames:
          type: string
          example: Gosling May
        code:
          type: string
          example: FFFFFFFF
        direction:
          type: string
          example: Avenida Arequipa N° 123
        telephone:
          type: string
          example: 999888777
        age:
          type: string
          example: 30
        state:
          type: string
          example: INACTIVO
          enum:
            - INACTIVO
            - ACTIVO
        profile:
          type: string
          example: BACKEND DEVELOPER
        isNew:
          type: string
          example: X
        rol:
          type: string
          example: USER
        nacionalidad:
          type: string
          example: Peruana
        genero:
          type: string
          example: Masculino
        estadocivil:
          type: string
          example: Casado
        dni:
          type: string
          example: 73938508
        cv:
          type: object
          properties:
            id:
              type: string
              example: abcde12345
            titulo:
              type: string
              example: Documento de Integridad
            tipoFile:
              type: string
              example : .pdf
            code:
              type: string
              example: FFFFFFFF
            tipoDocumento:
              type: string
              example: "cv | documento"
            url:
              type: string
              example: https://.....
        vacant:
          type: array
          items:
            $ref: '#/components/schemas/Vacant'
        document:
          type: string
          example: 12345abcde
          description: Codigo del Documento
    EmployeeRequestUpdate:
      type: object
      properties:
        id:
          type: string
          example: 1
        names:
          type: string
          example: James
        email:
          type: string
          example: james@gmail.com
        dateOfbirth:
          type: string
          pattern: "^\\d{2}-\\d{2}-\\d{4}$"
          example: "10-03-1993"
        createAccount:
          type: string
          pattern: "^\\d{2}-\\d{2}-\\d{4}$"
          example: "10-03-1993"
        modifiedAccount:
          type: string
          pattern: "^\\d{2}-\\d{2}-\\d{4}$"
          example: "10-03-1993"
        surenames:
          type: string
          example: Gosling May
        code:
          type: string
          example: FFFFFFFF
        direction:
          type: string
          example: Avenida Arequipa N° 123
        telephone:
          type: string
          example: 999888777
        age:
          type: string
          example: 30
        state:
          type: string
          example: INACTIVO
          enum:
            - INACTIVO
            - ACTIVO
        profile:
          type: string
          example: BACKEND DEVELOPER
        isNew:
          type: string
          example: X
        rol:
          type: string
          example: USER
        nacionalidad:
          type: string
          example: Peruana
        genero:
          type: string
          example: Masculino
        estadocivil:
          type: string
          example: Casado
        dni:
          type: string
          example: 73938508
        cv:
          type: object
          properties:
            id:
              type: string
              example: abcde12345
            titulo:
              type: string
              example: Documento de Integridad
            tipoFile:
              type: string
              example : .pdf
            code:
              type: string
              example: FFFFFFFF
            tipoDocumento:
              type: string
              example: "cv | documento"
            url:
              type: string
              example: https://.....
    Vacant:
      type: object
      properties:
        id:
          type: string
          example: 1
        name:
          type: string
          example: James
        userCode:
          type: string
          example: FFFFFFFF
          description: Codigo del Usuario que creo la Vacante
        proceso:
          type: string
          example: INICIADO
          enum:
            - INICIADO
            - EN PROCESO
            - FINALIZADO
        state:
          type: string
          example: INACTIVO
          enum:
            - INACTIVO
            - ACTIVO
    EmployeeRequest:
      type: object
      required:
        - names
        - email
        - surenames
        - code
        - rol
      properties:
        names:
          type: string
          example: James
        email:
          type: string
          example: james@gmail.com
        surenames:
          type: string
          example: Gosling May
        code:
          type: string
          example: FFFFFFFF
        rol:
          type: string
          example: USER
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string